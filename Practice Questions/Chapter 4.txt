1. What is []?
-eine Liste/array

2. How would you assign the value 'hello' as the third value in a list stored in a variable named spam? (Assume spam contains [2, 4, 6, 8, 10].)
-spam[2] = 'hello'

For the following three questions, let’s say spam contains the list ['a', 'b', 'c', 'd'].

3. What does spam[int(int('3' * 2) // 11)] evaluate to?
int('3' * 2) = int('33') => 33//11 => spam(int(3)) => d			'3' * 2 ist eine String "Erweiterung", '3' * 5 = '33333'

4. What does spam[-1] evaluate to?
d

5. What does spam[:2] evaluate to?
['a', 'b']		spam[:2] geht bis Index 2, aber nicht einschließlich

For the following three questions, let’s say bacon contains the list [3.14, 'cat', 11, 'cat', True].

6. What does bacon.index('cat') evaluate to?
1

7. What does bacon.append(99) make the list value in bacon look like?
[3.14, 'cat', 11, 'cat', True, 99]

8. What does bacon.remove('cat') make the list value in bacon look like?
[3.14, 11, 'cat', True, 99]

9. What are the operators for list concatenation and list replication?
+ um zwei Listen zusammenzuführen
* um eine Liste zu replizieren (z.B spam * 3 ist dann quasi spam + spam + spam)

10. What is the difference between the append() and insert() list methods?
-append(object): fügt ein Objekt ans Ende der Liste hinzu
-insert(index, object): fügt ein Objekt an der stelle Index hinzu

11. What are two ways to remove values from a list?
-spam.remove(object) => object kann Zahl oder String sein
-del spam[index] => löscht den Eintrag an der Index Stelle, unabhängig vom Inhalt

12. Name a few ways that list values are similar to string values.
-String quasi eine Liste von einzelnen String Charakteren
-Nahezu identische operatoren

13. What is the difference between lists and tuples?
-Elemente eines Tupels kann man nicht mehr ändern sobald einmal eingefügt
-da tuples nicht geändert werden gibts ein paar integrierte Optimierungen von Python selbst um mit tuples zu arbeiten

14. How do you type the tuple value that has just the integer value 42 in it?
cheese = (42,)

15. How can you get the tuple form of a list value? How can you get the list form of a tuple value?
tuple(someList) => macht daraus ein tuple
list(someTuple) => macht daraus eine Liste

16. Variables that “contain” list values don’t actually contain lists directly. What do they contain instead?
-referenzen (quasi pointer)

17. What is the difference between copy.copy() and copy.deepcopy()?
copy.deepcopy(spam) = erzeugt eine Kopie der Liste, die dann eigenständig bearbeitet werden kann (Tiefe Kopie)
copy.copy = flache Kopie 
	=> Flache Kopie nur dann sinnvoll, wenn man nicht mit zusammengesetzten Objekten arbeitet