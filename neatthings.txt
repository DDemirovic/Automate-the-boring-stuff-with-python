Liste/array mit range(i), natürlich kann man da auch die Eigenschaften von range(start, stop, schrittweite) anwenden
	list(range(i)) 


For Schleife mit der Länge der Liste
	for i in range(len(someList))

multiple assignments
	cat = ['orange', 'fat', 'loud']
	color, bodyType, behaviour = cat

Dreiecksswap
	a, b = b, a

augmented operators
	spam = spam + 1    => spam += 1	//	spam -= 1	//	spam *= 1	//	spam /= 1	//	spam %= 1

List .sort Keywörter
	spam.sort(reverse=True) = sortiert in umgekehrter Reihenfolge
	spam.sort(key=str.lower) = ignoriert die Standard Reihenfolge, dass uppercase immer vorm lowercase kommt (quasi ['A', 'Z', 'a', 'z'] dann wird daraus ['A', 'a', 'Z', 'z']


\ in einer Zeile ist quasi ein "ignorier das Ende vom Block, es geht noch weiter" (damit es leserlicher wird)


								dictionary

countries={"Ghana": "Accra", "China": "Beijing"}
# using the del keyword
del countries["China"]
nun ist countries ={"Ghana": "Accra"}


								sys.argv Methoden

#Dieser Weg speichert die eingetragenen Argumente in eine separate Liste, falls damit noch was gemacht werden soll
listOfSystemArguments = []
for i in range(1,len(sys.argv)):        #excludes sys.argv[0], because [0] = name of that program, so the arguments are stored at [1] until the end
    listOfSystemArguments.append(sys.argv[i])


#Falls nur die Liste geprintet werden soll
print(sys.argv[1:])

#[0] wird gelöscht, weil das der Name des Programms ist, hilft (aktuell) eher weniger wenn man mit den Argumentieren arbeiten will
del sys.argv[0]
//do some more stuff